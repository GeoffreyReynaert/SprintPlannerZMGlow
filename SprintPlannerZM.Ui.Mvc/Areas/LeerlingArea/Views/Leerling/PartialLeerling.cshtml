@model SprintPlannerZM.Model.Hulpleerling
@{
    var count = 0;
}
<div class="cards">
    @if (Model.Sprintvakkeuzes != null)
    {
        if (Model.Sprintvakkeuzes.Any())
        {
            foreach (var sprintvakkeuze in Model.Sprintvakkeuzes)
            {
                count++;
                <div class="card">
                    <div class="card-header bg-header">
                        <input id="vakId{@count}" value="@sprintvakkeuze.sprintvakkeuzeID" type="hidden" />
                        <input id="leerlingId{@count}" value="@sprintvakkeuze.hulpleerlingID" type="hidden" />
                        <h6 id="vaknaam{@count}"> @sprintvakkeuze.Vak.vaknaam</h6>
                    </div>
                    <div class="card-body bg-body-text">@sprintvakkeuze.Vak.Leerkracht.voornaam @sprintvakkeuze.Vak.Leerkracht.achternaam </div>
                    <div class="card-footer bg-footer-text">
                        <span> Sprint </span>
                        <input id="vakSprint{@count}" type="checkbox" class="mt-1 display-line" @(Convert.ToBoolean(sprintvakkeuze.sprint) ? "checked='checked'" : string.Empty)>
                        <input id="vakTyper{@count}" type="hidden" @(Convert.ToBoolean(sprintvakkeuze.typer) ? "checked='checked'" : string.Empty)>
                        <input id="vakMklas{@count}" type="hidden" @(Convert.ToBoolean(sprintvakkeuze.mklas) ? "checked='checked'" : string.Empty)>
                    </div>
                </div>
                @*<div class="trBordercolor container">
                        <div class="">
                            <div class="pt-2 containerllnoverzicht">
                                <input id="vakId{@count}" value="@sprintvakkeuze.sprintvakkeuzeID" type="hidden"/>
                                <input id="leerlingId{@count}" value="@sprintvakkeuze.hulpleerlingID" type="hidden"/>
                                <h6 class="w-20" id="vaknaam{@count}"> @sprintvakkeuze.Vak.vaknaam</h6>
                                <span> Sprint </span>
                                <input id="vakSprint{@count}" type="checkbox" class="ml-lg-n5 mt-1" @(Convert.ToBoolean(sprintvakkeuze.sprint) ? "checked='checked'" : string.Empty)>
                                <input id="vakTyper{@count}" type="hidden" class="ml-lg-n5 mt-1" @(Convert.ToBoolean(sprintvakkeuze.typer) ? "checked='checked'" : string.Empty)>
                                <input id="vakMklas{@count}" type="hidden" class="ml-lg-n5 mt-1" @(Convert.ToBoolean(sprintvakkeuze.mklas) ? "checked='checked'" : string.Empty)>
                            </div>
                        </div>
                    </div>*@
            }
            <input id="anySprint" value="true" type="hidden" />
        }
        else
        {
            foreach (var vak in Model.Klas.Vakken)
            {
                count++;
                <div class="card">
                    <div class="card-header bg-header">
                        <input id="vakId{@count}" value="@vak.vakID" type="hidden" />
                        <input id="leerlingId{@count}" value="@Model.leerlingID" type="hidden" />
                        <h6 id="vaknaam{@count}"> @vak.vaknaam</h6>
                    </div>
                    <div class="card-body bg-body-text">@vak.Leerkracht.voornaam @vak.Leerkracht.achternaam </div>
                    <div class="card-footer bg-footer-text">
                        <span> Sprint </span>
                        <input id="vakSprint{@count}" type="checkbox" class="ml-lg-n5 mt-1 display-line">
                        <input id="vakTyper{@count}" type="hidden" class="ml-lg-n5 mt-1">
                        <input id="vakMklas{@count}" type="hidden" class="ml-lg-n5 mt-1">
                    </div>
                </div>

                @*<div class="trBordercolor container">
                        <div class="">
                            <div class="pt-2 containerllnoverzicht">
                                <input id="vakId{@count}" value="@vak.vakID" type="hidden"/>
                                <input id="leerlingId{@count}" value="@Model.leerlingID" type="hidden"/>
                                <h6 class="w-20" id="vaknaam{@count}"> @vak.vaknaam</h6>
                                <span> Sprint </span>
                                <input id="vakSprint{@count}" type="checkbox" class="ml-lg-n5 mt-1">
                                <input id="vakTyper{@count}" type="hidden" class="ml-lg-n5 mt-1">
                                <input id="vakMklas{@count}" type="hidden" class="ml-lg-n5 mt-1">
                            </div>
                        </div>
                    </div>
                    <input id="anySprint" value="false" type="hidden"/>*@
            }
        }
    }
</div>
<button id="btnUpdate" class="btn btn-primary mt-md-n2 margin"> Bevestig </button>

<script>
    @*$("#btnUpdate").click(function () {
        const leerlingLijst = [];
        for (let count = 1; count <= @count; count++) {
            const leerlingId = $(`input[id="leerlingId{${count}}"]`).val();
            const familieNaam = $(`input[id="familieNaam{${count}}"]`).val();
            const voorNaam = $(`input[id="voorNaam{${count}}"]`).val();
            const email = $(`input[id="email{${count}}"]`).val();
            const klasId = $(`input[id="klasId{${count}}"]`).val();
            const leerlingSprint = $(`input[id="leerlingSprint{${count}}"]`).is(':checked');
            const leerlingTyper = $(`input[id="leerlingTyper{${count}}"]`).is(':checked');
            const leerlingMklas = $(`input[id="leerlingMklas{${count}}"]`).is(':checked');
            const leerlingInfo = {};
            leerlingInfo["leerlingId"] = leerlingId;
            leerlingInfo["familieNaam"] = familieNaam;
            leerlingInfo["voorNaam"] = voorNaam;
            leerlingInfo["email"] = email;
            leerlingInfo["klasId"] = klasId;
            leerlingInfo["sprinter"] = leerlingSprint;
            leerlingInfo["typer"] = leerlingTyper;
            leerlingInfo["mklas"] = leerlingMklas;
            leerlingLijst.push(leerlingInfo);
        }
        $(this).load("UpdateLeerlingen", { leerlingenLijst: JSON.stringify(leerlingLijst) });
    });*@

    var anysprint = $("#anySprint").val();

    $("#btnUpdate").click(function() {
        if (anysprint === "true") {
            console.log(true);
            $(this).load("UpdateLeerlingen", { vakKeuzeLijst: JSON.stringify(lijst()), anySprint: true });
        } else {
            console.log(false);
            $(this).load("UpdateLeerlingen", { vakKeuzeLijst: JSON.stringify(lijst()), anySprint: false });
        }
    });

    function lijst() {
        const leerlingLijst = [];
        for (let count = 1; count <= @count; count++) {
            const vakId = $(`input[id="vakId{${count}}"]`).val();
            const vakSprint = $(`input[id="vakSprint{${count}}"]`).is(':checked');
            const vakTyper = $(`input[id="vakTyper{${count}}"]`).is(':checked');
            const vakMklas = $(`input[id="vakMklas{${count}}"]`).is(':checked');
            const leerlingId = $(`input[id="leerlingId{${count}}"]`).val();
            const leerlingInfo = {};
            if (anysprint === "false") {
                leerlingInfo["vakId"] = vakId;
            } else {
                leerlingInfo["sprintvakkeuzeId"] = vakId;
            }
            leerlingInfo["sprint"] = vakSprint;
            leerlingInfo["typer"] = vakTyper;
            leerlingInfo["mklas"] = vakMklas;
            leerlingInfo["hulpleerlingId"] = leerlingId;
            leerlingLijst.push(leerlingInfo);
        }
        return leerlingLijst;
    }
</script>

<style>
    .cards {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        grid-auto-rows: auto;
        grid-gap: 1rem;
    }

    .card {
        border: 2px solid grey;
        border-radius: 4px;
        margin: 4px;
    }

    .bg-header{
        background-color: #fa975f
    }

    .bg-body{

    }

    .bg-body-text{
        color: grey
    }

    .bg-footer-text {
        color: #009ba8;
    }

    .display-line{
        margin-left: 10px;
    }
</style>